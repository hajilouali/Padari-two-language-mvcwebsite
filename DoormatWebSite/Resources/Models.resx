<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArzeshAfzodeh" xml:space="preserve">
    <value>tax</value>
  </data>
  <data name="AttachmentDiscription" xml:space="preserve">
    <value>Attachment Discription</value>
  </data>
  <data name="CustomerAddress" xml:space="preserve">
    <value>Customer Address</value>
  </data>
  <data name="CustomerName" xml:space="preserve">
    <value>Customer Name</value>
  </data>
  <data name="CustomerPhone" xml:space="preserve">
    <value>Customer Phone</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Factor Date</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="FactorDiscription" xml:space="preserve">
    <value>Factor Discription</value>
  </data>
  <data name="FactorStateID" xml:space="preserve">
    <value>Factor State</value>
  </data>
  <data name="FactorStateTitle" xml:space="preserve">
    <value>State Title</value>
  </data>
  <data name="FileAttach" xml:space="preserve">
    <value>File Attach</value>
  </data>
  <data name="GalleryImage" xml:space="preserve">
    <value>Image Gallery </value>
  </data>
  <data name="GalleryName" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="KeyWord" xml:space="preserve">
    <value>Key Words</value>
  </data>
  <data name="LanguageTypeTitle" xml:space="preserve">
    <value>Language Code</value>
  </data>
  <data name="ourserviceimage" xml:space="preserve">
    <value>Our Service Image</value>
  </data>
  <data name="ourserviceSubtitle" xml:space="preserve">
    <value>Our Service Subtitle</value>
  </data>
  <data name="ourserviceTitle" xml:space="preserve">
    <value>Our Service Title</value>
  </data>
  <data name="ourserviceUrl" xml:space="preserve">
    <value>Our Service Url</value>
  </data>
  <data name="OurWorkGalleryTypeId" xml:space="preserve">
    <value>Gallery Type</value>
  </data>
  <data name="OurWorkGalleryTypeTitle" xml:space="preserve">
    <value>Gallery Type Title</value>
  </data>
  <data name="PartnerAddress" xml:space="preserve">
    <value>Partner Address</value>
  </data>
  <data name="PartnerCity" xml:space="preserve">
    <value>Partner City</value>
  </data>
  <data name="PartnerMobile" xml:space="preserve">
    <value>Partner Mobile</value>
  </data>
  <data name="PartnerNumber" xml:space="preserve">
    <value>Partner Number 1 </value>
  </data>
  <data name="PartnerNumber1" xml:space="preserve">
    <value>Partner Number 2 </value>
  </data>
  <data name="PartnerSelectLanguage" xml:space="preserve">
    <value>Select Language</value>
  </data>
  <data name="PartnerTitle" xml:space="preserve">
    <value>Partner Title</value>
  </data>
  <data name="PostDate" xml:space="preserve">
    <value>Post Date</value>
  </data>
  <data name="PostShortDiscription" xml:space="preserve">
    <value>Post Short Discription</value>
  </data>
  <data name="PostText" xml:space="preserve">
    <value>Post Text</value>
  </data>
  <data name="PostTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="PostType" xml:space="preserve">
    <value>Post Type</value>
  </data>
  <data name="PostTypeTitle" xml:space="preserve">
    <value>Post Type Title</value>
  </data>
  <data name="PostUser" xml:space="preserve">
    <value>User Posted</value>
  </data>
  <data name="ProductDateCreate" xml:space="preserve">
    <value>Product Date Create</value>
  </data>
  <data name="ProductGalleryImage" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ProductGalleryTitle" xml:space="preserve">
    <value>Product Gallery Title</value>
  </data>
  <data name="ProductKeyWord" xml:space="preserve">
    <value>Product KeyWords</value>
  </data>
  <data name="ProductPicThumbnail" xml:space="preserve">
    <value>Product Pic Thumbnail</value>
  </data>
  <data name="ProductPropertyDiscription" xml:space="preserve">
    <value>Discription</value>
  </data>
  <data name="ProductPropertyTitle" xml:space="preserve">
    <value> Title</value>
  </data>
  <data name="ProductShortDiscription" xml:space="preserve">
    <value>Product Short Discription</value>
  </data>
  <data name="ProductText" xml:space="preserve">
    <value>ProductText</value>
  </data>
  <data name="ProductTitle" xml:space="preserve">
    <value>Product Title</value>
  </data>
  <data name="ProductTypeSelected" xml:space="preserve">
    <value>Select Product Type</value>
  </data>
  <data name="ProductTypeTitle" xml:space="preserve">
    <value>Product Type Title</value>
  </data>
  <data name="ProductUnitSalary" xml:space="preserve">
    <value>Product Unit Salary</value>
  </data>
  <data name="ProductUnitType" xml:space="preserve">
    <value>Select Product Unite</value>
  </data>
  <data name="Requaried" xml:space="preserve">
    <value>Please inter {0}</value>
  </data>
  <data name="RowFactorAmount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="RowFactorCount" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="RowFactorDiscription" xml:space="preserve">
    <value>Discription</value>
  </data>
  <data name="RowFactorFactor" xml:space="preserve">
    <value>Factor Number</value>
  </data>
  <data name="RowFactorLenght" xml:space="preserve">
    <value>Lenght</value>
  </data>
  <data name="RowFactorProduct" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="RowFactorSalary" xml:space="preserve">
    <value>Salary</value>
  </data>
  <data name="RowFactorWidth" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="Salary" xml:space="preserve">
    <value>Salary</value>
  </data>
  <data name="ServiceSalary" xml:space="preserve">
    <value>Service Salary</value>
  </data>
  <data name="ServiceTitle" xml:space="preserve">
    <value>Service Title</value>
  </data>
  <data name="SliderImage" xml:space="preserve">
    <value>Slider Image</value>
  </data>
  <data name="SliderSubtitle" xml:space="preserve">
    <value>Slider Subtitle </value>
  </data>
  <data name="SliderSubtitle2" xml:space="preserve">
    <value>Url Text</value>
  </data>
  <data name="SliderSubtitle3" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="SliderTitle" xml:space="preserve">
    <value>Slider Title</value>
  </data>
  <data name="TotalSalary" xml:space="preserve">
    <value>Total Salary</value>
  </data>
  <data name="UnitTypeTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="UserFactor" xml:space="preserve">
    <value>User Factor Create</value>
  </data>
  <data name="UserProduct" xml:space="preserve">
    <value>User Product Create</value>
  </data>
  <data name="idSize" xml:space="preserve">
    <value>size</value>
  </data>
  <data name="discription" xml:space="preserve">
    <value>discription</value>
  </data>
  <data name="planicon" xml:space="preserve">
    <value>icon</value>
  </data>
</root>